Resources:
  # Public decks (MPL, etc...)
  GlobalDecksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.globalDecksTable}
      AttributeDefinitions:
        - AttributeName: deckId
          AttributeType: S
      KeySchema:
        - AttributeName: deckId
          KeyType: HASH
      # Set the capacity to auto-scale
      BillingMode: PAY_PER_REQUEST
  # All cards (from Scryfall)
  GlobalCardsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.globalCardsTable}
      AttributeDefinitions:
        - AttributeName: cardId
          AttributeType: S
        - AttributeName: lang
          AttributeType: S
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: cardId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: lang-name-index
          KeySchema:
          - AttributeName: lang
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
          Projection:
            ProjectionType: ALL
      # Set the capacity to auto-scale
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE

Outputs:
  GlobalDecksTableArn:
    Value:
       Fn::GetAtt:
        - GlobalDecksTable
        - Arn
    Export:
      Name: GlobalDecksTableArn
  GlobalCardsTableArn:
    Value:
       Fn::GetAtt:
        - GlobalCardsTable
        - Arn
    Export:
      Name: GlobalCardsTableArn
  GlobalCardsTableStreamArn:
    Value:
       Fn::GetAtt:
        - GlobalCardsTable
        - StreamArn
    Export:
      Name: GlobalCardsTableStreamArn
